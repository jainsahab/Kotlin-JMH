buildscript {
    repositories {
        mavenCentral()

        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "me.champeau.gradle:jmh-gradle-plugin:0.5.0"
        classpath "gradle.plugin.io.morethan.jmhreport:gradle-jmh-report:0.9.0"
    }
}

plugins {
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.4.10'
    id 'org.jetbrains.kotlin.jvm' version '1.4.10'
    id 'application'
}
apply plugin: "me.champeau.gradle.jmh"
apply plugin: "io.morethan.jmhreport"

group = 'codingflower.com'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

compileKotlin {
    kotlinOptions.jvmTarget = '11'
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '11'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    // JACKSON
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.0'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.12.0'

    // Gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

    // Kotlinx
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.0.1'

    // Klaxon
    implementation 'com.beust:klaxon:5.5'

    // Moshi>
    implementation 'com.squareup.moshi:moshi-kotlin:1.12.0'

    // Argo>
    implementation 'net.sourceforge.argo:argo:6.0'
}

jmh {
    include = ['ComplexJsonPerformanceList.+']
    benchmarkMode = ["$System.env.BENCHMARK_MODE".toString()]
    resultsFile = project.file("${project.buildDir}/reports/jmh/result.json")
    resultFormat = 'JSON'
    threads = 4
//    humanOutputFile = project.file("${project.buildDir}/reports/jmh/human.txt")
//    profilers = ['async']
}

jmhReport {
    jmhResultPath = project.file("${project.buildDir}/reports/jmh/result.json")
    jmhReportOutput = project.file('build/reports/jmh')
}

tasks.jmh.finalizedBy tasks.jmhReport

tasks {
    jmhJar {
        exclude("META-INF/versions/9/module-info.class")
    }

}